<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on Terminal</title>
    <link>http://localhost:1313/tags/nginx/</link>
    <description>Recent content in Nginx on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 07 Oct 2025 12:42:47 +0300</lastBuildDate><atom:link href="http://localhost:1313/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to use Nginx as a Loadbalancer</title>
      <link>http://localhost:1313/posts/nginx-as-a-loadbalancer/</link>
      <pubDate>Tue, 07 Oct 2025 12:42:47 +0300</pubDate>
      
      <guid>http://localhost:1313/posts/nginx-as-a-loadbalancer/</guid>
      <description>&lt;h1 id=&#34;what-is-a-loadbalancer&#34;&gt;What is a Loadbalancer?&lt;/h1&gt;
&lt;p&gt;In situations where we have a single server and multiple clients, our server can be overwhelmed making it unable to serve webpages as expected. In a technical fashion, its is recommended to have multiple servers to distribute the request load. Having multiple severs is good but its all useless unless there&amp;rsquo;s a tool that handles how the logic of how the load is balanced through the servers.
A load balancer basically accepts request form users on behalf of severs and then routes traffic to the servers depending on the algorithm used. The algorithm could require the loadbalancer to either forward traffic to a server that&amp;rsquo;s alive or just any sever. The main goal is to recduce the load on the severs. This reduces cases such as DDOS attacks as no single sever will have to handle all traffic.
As discussed earlie, nginx can also be used as a Loadbalancer&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;what-is-a-loadbalancer&#34;&gt;What is a Loadbalancer?&lt;/h1&gt;
&lt;p&gt;In situations where we have a single server and multiple clients, our server can be overwhelmed making it unable to serve webpages as expected. In a technical fashion, its is recommended to have multiple servers to distribute the request load. Having multiple severs is good but its all useless unless there&amp;rsquo;s a tool that handles how the logic of how the load is balanced through the servers.
A load balancer basically accepts request form users on behalf of severs and then routes traffic to the servers depending on the algorithm used. The algorithm could require the loadbalancer to either forward traffic to a server that&amp;rsquo;s alive or just any sever. The main goal is to recduce the load on the severs. This reduces cases such as DDOS attacks as no single sever will have to handle all traffic.
As discussed earlie, nginx can also be used as a Loadbalancer&lt;/p&gt;
&lt;h2 id=&#34;what-are-the-benefits-of-a-load-balancer&#34;&gt;What are the benefits of a load balancer&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Improved perfomance due to traffic being evenly distributed across the specified server&lt;/li&gt;
&lt;li&gt;Scalabioity: Allows you to scale horizontaly where instead of getting more powerful servers, you can get simple servers&lt;/li&gt;
&lt;li&gt;High Availability is achieved as traffic is well distributed, if one of the cluster servers is out, it does not affect  the main application&lt;/li&gt;
&lt;li&gt;i&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;scenario&#34;&gt;Scenario&lt;/h2&gt;
&lt;p&gt;I have 3 app servers with the hostnames as follows:
- server stapp01.stratos.xfusioncorp.com
- server stapp02.stratos.xfusioncorp.com
- server stapp03.stratos.xfusioncorp.com&lt;/p&gt;
&lt;p&gt;I also have another server that I intend on using it as a loadbalancer. The end goal is enable by loadbalancer to takeup traffic from users and distribute it across my 3 servers.&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;install nginx in the server we intend to use as the load balanacer
&lt;code&gt;sudo dnf install nginx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Access the configuration file in the path &lt;code&gt;/et/nginx/nginx.conf&lt;/code&gt; and configure it to be used as a loadbalancer&lt;/li&gt;
&lt;li&gt;edit the config file to this&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;upstream app_server &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server stapp01.stratos.xfusioncorp.com:8087;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server stapp02.stratos.xfusioncorp.com:8087;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server stapp03.stratos.xfusioncorp.com:8087;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    listen 80;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server_name _;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    access_log /var/log/nginx/access.log;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    location / &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        proxy_pass http://app_server;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        proxy_set_header Host $host;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        proxy_set_header X-Real-IP $remote_addr;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;breadkdown&lt;/strong&gt;
&lt;code&gt;http{}&lt;/code&gt; is the main container for the nginx webserver configuration
- everything related to serving HTTP trafic goes here
&lt;code&gt;upstream app_server{}&lt;/code&gt; defines a server group called &lt;em&gt;app_server&lt;/em&gt;. This is basically our cluster&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the &lt;code&gt;server&lt;/code&gt; defines every speciifc server name and their serving port&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;server{..}&lt;/code&gt; Defines the virtual host or server instance
&lt;code&gt;access_log&lt;/code&gt; specifies where the all successful logins will be logged
&lt;code&gt;location \&lt;/code&gt; This catches all trafic on the url **
&lt;code&gt;proxy_pass&lt;/code&gt; specifies where to send the data when its received and in this context, its sent over to the upstream group &lt;code&gt;app_server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now, with the above setup and a simple webserver serving the default &amp;lsquo;welcome&amp;rsquo; webpage running on our servers, anytime we hit the Loadbalancer, it will direct traffic to either of the three servers&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Using Nginx as a Web server</title>
      <link>http://localhost:1313/posts/nginx-as-a-webserver/</link>
      <pubDate>Tue, 07 Oct 2025 12:42:47 +0300</pubDate>
      
      <guid>http://localhost:1313/posts/nginx-as-a-webserver/</guid>
      <description>&lt;p&gt;A mentioned earlier, Nginx can be used  in a number of ways. One of them is as a webserver.
A webserver is a software that sends webpages stored in webservers to users on request. By default, the web uses HTTP protocol on port 80 which sends data in unencrypted format. Nginx supports both HTTP and HTTPS meaning that we can send data securely.
Nginx configuration files are found in the &lt;code&gt;/etc/nginx&lt;/code&gt; directory. We majourly make changes to the &lt;code&gt;sites-available&lt;/code&gt; directory which can be structured to house multiple sites each described as a configuration file with the &lt;code&gt;.conf&lt;/code&gt; extension
After creating a site configuration file, we are supposed to publish the site to the &lt;code&gt;sites-enabled&lt;/code&gt;. This is done by creating a symbolic link with the command
&lt;code&gt;ln -s ~/etc/nginx/sites-available/default ~/etc/nginx/sites-enabled/default&lt;/code&gt;
The command above basically links the &lt;code&gt;site-enbaled/default&lt;/code&gt; and for the changes to take place, we need to restart nginx using the command &lt;code&gt;sudo nginx -s reload&lt;/code&gt;&lt;/p&gt;</description>
      <content>&lt;p&gt;A mentioned earlier, Nginx can be used  in a number of ways. One of them is as a webserver.
A webserver is a software that sends webpages stored in webservers to users on request. By default, the web uses HTTP protocol on port 80 which sends data in unencrypted format. Nginx supports both HTTP and HTTPS meaning that we can send data securely.
Nginx configuration files are found in the &lt;code&gt;/etc/nginx&lt;/code&gt; directory. We majourly make changes to the &lt;code&gt;sites-available&lt;/code&gt; directory which can be structured to house multiple sites each described as a configuration file with the &lt;code&gt;.conf&lt;/code&gt; extension
After creating a site configuration file, we are supposed to publish the site to the &lt;code&gt;sites-enabled&lt;/code&gt;. This is done by creating a symbolic link with the command
&lt;code&gt;ln -s ~/etc/nginx/sites-available/default ~/etc/nginx/sites-enabled/default&lt;/code&gt;
The command above basically links the &lt;code&gt;site-enbaled/default&lt;/code&gt; and for the changes to take place, we need to restart nginx using the command &lt;code&gt;sudo nginx -s reload&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;connfigurations&#34;&gt;Connfigurations&lt;/h1&gt;
&lt;p&gt;By default, nginx uses one configuration file &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; especially if nginx is installed with a package manager. We put our custom configurations in the &lt;code&gt;/etc/nginx/sites-available&lt;/code&gt; and they can only be served if they are linked with the &lt;code&gt;sites-enables&lt;/code&gt;directory&lt;/p&gt;
&lt;p&gt;** example of an Nginx config file**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Basic Settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sendfile on;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tcp_nopush on;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tcp_nodelay on;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    keepalive_timeout 65;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    types_hash_max_size 2048;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# server_tokens off;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# server_names_hash_bucket_size 64;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# server_name_in_redirect off;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    include /etc/nginx/mime.types;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    default_type application/octet-stream;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# SSL Settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; &lt;span style=&#34;color:#75715e&#34;&gt;# Dropping SSLv3, ref: POODLE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ssl_prefer_server_ciphers on;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Logging Settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    access_log /var/log/nginx/access.log;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    error_log /var/log/nginx/error.log;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Gzip Settings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gzip on;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# gzip_vary on;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# gzip_proxied any;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# gzip_comp_level 6;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# gzip_buffers 16 8k;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# gzip_http_version 1.1;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Virtual Host Configs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;##&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    include /etc/nginx/conf.d/*.conf;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    include /etc/nginx/sites-enabled/*;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;The key-pairs above are called &lt;code&gt;directives&lt;/code&gt; and directives always end with a &lt;code&gt;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Each directive has a specific meaning and defines a feature in context of an application&lt;/li&gt;
&lt;li&gt;The ones ones the the braces &lt;code&gt;{}&lt;/code&gt; are called &lt;code&gt;contexts&lt;/code&gt;. Contexts also contains directives&lt;/li&gt;
&lt;li&gt;everything with a &lt;code&gt;$&lt;/code&gt; is a varriable we can access in the config file&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;include&lt;/code&gt; statement is used to import another config file that build up on the config file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Directive Blocks&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They are enclosed in a module&lt;/li&gt;
&lt;li&gt;The root config is called the &lt;code&gt;main block&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Blocks can be nested together to build up on a logic&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    listen 80;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server_name example.com;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    access_log /var/log/nginx/example.com.log;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    location ^~/admin&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        index index.php;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 	&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;I the example above, &lt;code&gt;http&lt;/code&gt; is the main block that houses the &lt;code&gt;server&lt;/code&gt; block&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;server&lt;/code&gt; block contains configurations for the &lt;em&gt;example.com&lt;/em&gt; website&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;acces_log&lt;/code&gt; directive givses us a location where to store our logs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Nginx Configuration example&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#/etc/nginx/conf.d/example.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; server&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;     listen 80;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;     server_name example.com www.example.com;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;     root /var/www/example.com/html;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  5. &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;The example above will is a configuaration of our site names &lt;code&gt;example.com&lt;/code&gt; that will be served on port 80&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;root&lt;/code&gt; directive specifies where to file the files to serve&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>What is Nginx?</title>
      <link>http://localhost:1313/posts/nginx-intro/</link>
      <pubDate>Tue, 07 Oct 2025 12:42:47 +0300</pubDate>
      
      <guid>http://localhost:1313/posts/nginx-intro/</guid>
      <description>&lt;h1 id=&#34;what-is-nginx&#34;&gt;What is Nginx?&lt;/h1&gt;
&lt;p&gt;This is a software used to &amp;lsquo;serve&amp;rsquo; web content to our browser. It is an intermediary between a client and a server. In this instance, it acts as a reverse proxy where it receives client&amp;rsquo;s requests on behalf of a server.
Nginx can either be used as:
- HTTP Server
- Revers proxy
- Mail Proxy
- Generic TCP/UDP proxy server
Feautures in Nginx are activated using modules. This feature allows admins to only use the features they need. This means that you could install nginx and only use it as a HTTP server only&lt;/p&gt;</description>
      <content>&lt;h1 id=&#34;what-is-nginx&#34;&gt;What is Nginx?&lt;/h1&gt;
&lt;p&gt;This is a software used to &amp;lsquo;serve&amp;rsquo; web content to our browser. It is an intermediary between a client and a server. In this instance, it acts as a reverse proxy where it receives client&amp;rsquo;s requests on behalf of a server.
Nginx can either be used as:
- HTTP Server
- Revers proxy
- Mail Proxy
- Generic TCP/UDP proxy server
Feautures in Nginx are activated using modules. This feature allows admins to only use the features they need. This means that you could install nginx and only use it as a HTTP server only&lt;/p&gt;
&lt;h2 id=&#34;what-are-the-advantages-of-using-nginx&#34;&gt;What are the advantages of using Nginx?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Speed&lt;/li&gt;
&lt;li&gt;Loadbalancing -&amp;gt; can be used to distribute traffic to backend service. This comes as an advantage to prevent DDOS attacks or overwhelming one server&lt;/li&gt;
&lt;li&gt;Nginx has the ability to run on very cheap hardware&lt;/li&gt;
&lt;li&gt;nginx has the ability to update without interrupting running workloads&lt;/li&gt;
&lt;li&gt;Very easy to maintain and install&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
  </channel>
</rss>
